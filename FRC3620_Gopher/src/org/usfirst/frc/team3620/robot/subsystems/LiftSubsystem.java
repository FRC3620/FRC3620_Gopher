// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team3620.robot.subsystems;

import java.lang.reflect.Array;

import org.slf4j.Logger;
import org.usfirst.frc.team3620.robot.RobotMap;
import org.usfirst.frc3620.logger.EventLogging;
import org.usfirst.frc3620.logger.EventLogging.Level;

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.FeedbackDevice;
import edu.wpi.first.wpilibj.CANTalon.TalonControlMode;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class LiftSubsystem extends Subsystem {
	Double[] vals = new Double[]{0.0,20.0,40.0,60.0};
	CANTalon liftCANTalon=RobotMap.subsystem1CANTalon1;
    public LiftSubsystem() {
		super();
		liftCANTalon.setFeedbackDevice(FeedbackDevice.CtreMagEncoder_Relative);
		liftCANTalon.changeControlMode(TalonControlMode.Position);
		liftCANTalon.setPID(0.4, 0, 0);
		liftCANTalon.setPosition(0);
		liftCANTalon.setSetpoint(vals[0]);	
	}

	Logger logger = EventLogging.getLogger(getClass(), Level.INFO);


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    final int N_POSITIONS = 3;
    
    int currentPosition = 0;
    
    public void bumpLiftUp() {
    	if (currentPosition != N_POSITIONS) {
    	currentPosition = currentPosition+1;
    	logger.info("new lift setpoint = {}", currentPosition);
    	liftCANTalon.setSetpoint(vals[currentPosition]);
    	}
    	else logger.info("Cannot move further up");
    }
    
    public void bumpLiftDown() {
    	if (currentPosition != 0) {
    		currentPosition = currentPosition-1;
        	logger.info("new lift setpoint = {}", currentPosition);
        	liftCANTalon.setSetpoint(vals[currentPosition]);
    	}
    	else logger.info("Cannot move further down");
    }
    
}

